Max Circular Subarray Sum



class Solution {
    public int circularSubarraySum(int arr[]) {
        
        int n = arr.length;
        int max_till = arr[0];
        int max_far = arr[0];
        int min_till = arr[0];
        int min_far = arr[0];
        
        for(int i = 1;i<n;i++){
            max_till = Math.max(arr[i], arr[i] + max_till);
            max_far = Math.max(max_till, max_far);
        }
        int max_kadane = max_far;
        
        for(int i=1;i<n;i++){
            min_till = Math.min(arr[i],arr[i] + min_till);
            min_far = Math.min(min_till,min_far);
        }
        int min_kadane = min_far;
        
        int total_sum = 0;
        for(int i = 0;i<n;i++){
            total_sum += arr[i];
        }
        if(total_sum == min_kadane){
            return max_kadane;
        }
        
        return Math.max(total_sum - min_kadane, max_kadane);
    }
}
